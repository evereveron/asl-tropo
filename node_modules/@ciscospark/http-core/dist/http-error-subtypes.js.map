{"version":3,"sources":["../src/http-error-subtypes.js"],"names":[],"mappings":"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","file":"http-error-subtypes.js","sourcesContent":["/**!\n *\n * Copyright (c) 2015 Cisco Systems, Inc. See LICENSE file.\n */\n\nimport extendError from 'extend-error';\n\n/**\n * @param {Error} Base\n * @returns {undefined}\n */\nexport default function makeSubTypes(Base) {\n  const NetworkOrCORSError = extendError(Base, {\n    subTypeName: `NetworkOrCORSError`,\n    code: 0\n  });\n\n  const BadRequest = extendError(Base, {\n    subTypeName: `BadRequest`,\n    code: 400\n  });\n\n  const Unauthorized = extendError(BadRequest, {\n    subTypeName: `Unauthorized`,\n    code: 401\n  });\n\n  const PaymentRequired = extendError(BadRequest, {\n    subTypeName: `PaymentRequired`,\n    code: 402\n  });\n\n  const Forbidden = extendError(BadRequest, {\n    subTypeName: `Forbidden`,\n    code: 403\n  });\n\n  const NotFound = extendError(BadRequest, {\n    subTypeName: `NotFound`,\n    code: 404\n  });\n\n  const MethodNotAllowed = extendError(BadRequest, {\n    subTypeName: `MethodNotAllowed`,\n    code: 405\n  });\n\n  const NotAcceptable = extendError(BadRequest, {\n    subTypeName: `NotAcceptable`,\n    code: 406\n  });\n\n  const ProxyAuthenticationRequired = extendError(BadRequest, {\n    subTypeName: `ProxyAuthenticationRequired`,\n    code: 407\n  });\n\n  const RequestTimeout = extendError(BadRequest, {\n    subTypeName: `RequestTimeout`,\n    code: 408\n  });\n\n  const Conflict = extendError(BadRequest, {\n    subTypeName: `Conflict`,\n    code: 409\n  });\n\n  const Gone = extendError(BadRequest, {\n    subTypeName: `Gone`,\n    code: 410\n  });\n\n  const LengthRequired = extendError(BadRequest, {\n    subTypeName: `LengthRequired`,\n    code: 411\n  });\n\n  const PreconditionFailed = extendError(BadRequest, {\n    subTypeName: `PreconditionFailed`,\n    code: 412\n  });\n\n  const RequestEntityTooLarge = extendError(BadRequest, {\n    subTypeName: `RequestEntityTooLarge`,\n    code: 413\n  });\n\n  const RequestUriTooLong = extendError(BadRequest, {\n    subTypeName: `RequestUriTooLong`,\n    code: 414\n  });\n\n  const UnsupportedMediaType = extendError(BadRequest, {\n    subTypeName: `UnsupportedMediaType`,\n    code: 415\n  });\n\n  const RequestRangeNotSatisfiable = extendError(BadRequest, {\n    subTypeName: `RequestRangeNotSatisfiable`,\n    code: 416\n  });\n\n  const ExpectationFailed = extendError(BadRequest, {\n    subTypeName: `ExpectationFailed`,\n    code: 417\n  });\n\n  const InternalServerError = extendError(Base, {\n    subTypeName: `InternalServerError`,\n    code: 500\n  });\n\n  const NotImplemented = extendError(InternalServerError, {\n    subTypeName: `NotImplemented`,\n    code: 501\n  });\n\n  const BadGateway = extendError(InternalServerError, {\n    subTypeName: `BadGateway`,\n    code: 502\n  });\n\n  const ServiceUnavailable = extendError(InternalServerError, {\n    subTypeName: `ServiceUnavailable`,\n    code: 503\n  });\n\n  const GatewayTimeout = extendError(InternalServerError, {\n    subTypeName: `GatewayTimeout`,\n    code: 504\n  });\n\n  const HttpVersionNotSupported = extendError(InternalServerError, {\n    subTypeName: `HttpVersionNotSupported`,\n    code: 505\n  });\n\n  Object.assign(Base, {\n    0: NetworkOrCORSError,\n    NetworkOrCORSError,\n    400: BadRequest,\n    BadRequest,\n    401: Unauthorized,\n    Unauthorized,\n    402: PaymentRequired,\n    PaymentRequired,\n    403: Forbidden,\n    Forbidden,\n    404: NotFound,\n    NotFound,\n    405: MethodNotAllowed,\n    MethodNotAllowed,\n    406: NotAcceptable,\n    NotAcceptable,\n    407: ProxyAuthenticationRequired,\n    ProxyAuthenticationRequired,\n    408: RequestTimeout,\n    RequestTimeout,\n    409: Conflict,\n    Conflict,\n    410: Gone,\n    Gone,\n    411: LengthRequired,\n    LengthRequired,\n    412: PreconditionFailed,\n    PreconditionFailed,\n    413: RequestEntityTooLarge,\n    RequestEntityTooLarge,\n    414: RequestUriTooLong,\n    RequestUriTooLong,\n    415: UnsupportedMediaType,\n    UnsupportedMediaType,\n    416: RequestRangeNotSatisfiable,\n    RequestRangeNotSatisfiable,\n    417: ExpectationFailed,\n    ExpectationFailed,\n    500: InternalServerError,\n    InternalServerError,\n    501: NotImplemented,\n    NotImplemented,\n    502: BadGateway,\n    BadGateway,\n    503: ServiceUnavailable,\n    ServiceUnavailable,\n    504: GatewayTimeout,\n    GatewayTimeout,\n    505: HttpVersionNotSupported,\n    HttpVersionNotSupported,\n    select(statusCode) {\n      if (typeof statusCode === `undefined` || statusCode === null) {\n        return Base;\n      }\n\n      statusCode = statusCode.statusCode || statusCode;\n      const E = Base[statusCode];\n      if (E) {\n        return E;\n      }\n\n      // eslint doesn't quite handle the next case yet\n      /* eslint quotes: [0] */\n      statusCode = `${statusCode.toString().split('').shift()}00`;\n      statusCode = parseInt(statusCode, 10);\n\n      return Base[statusCode] || Base;\n    }\n  });\n}\n"]}