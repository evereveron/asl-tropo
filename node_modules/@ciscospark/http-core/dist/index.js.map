{"version":3,"sources":["../src/index.js"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;kDAuCQ;;;;;;;;;gDACA;;;;;;;;;8CACA;;;;;;;;;+CACA;;;;;;;;;;;;;AAhCR,IAAM,eAAe,qBAAM,SAAS,YAAT,CAAsB,cAAtB,EAAsC,OAAtC,EAA+C;;;AAGxE,MAAI,wBAAS,OAAT,CAAJ,EAAuB;AACrB,QAAM,MAAM,OAAN,CADe;AAErB,cAAU,UAAU,CAAV,KAAgB,EAAhB,CAFW;AAGrB,YAAQ,GAAR,GAAc,GAAd,CAHqB;GAAvB;;AAMA,0BAAe,OAAf,EAAwB,cAAxB;;;;;AATwE,SAcxE,CAAQ,MAAR,GAAiB,QAAQ,MAAR,IAAkB,OAAlB,CAduD;;AAgBxE,SAAO,uBAAS,OAAT,CAAP,CAhBwE;CAA/C,CAArB;;;;;AAmBN,IAAM,iBAAiB;AACrB,QAAM,IAAN;AACA,gBAAc,CACZ,qBAAsB,MAAtB,EADY,CAAd;CAFI;;;AAQC,IAAM,8BAAW,YAAX;AACN,IAAM,4BAAU,aAAa,cAAb,CAAV","file":"index.js","sourcesContent":["/**!\n *\n * Copyright (c) 2015 Cisco Systems, Inc. See LICENSE file.\n */\n\nimport {curry, defaults as lodashDefaults, isString} from 'lodash';\nimport HttpStatusInterceptor from './interceptors/http-status';\nimport _request from './request';\n\n// Curry protorequest so we generate a function with default options built in.\nconst protorequest = curry(function protorequest(defaultOptions, options) {\n  // allow for options to be a string (and therefore expect options in the third\n  // position) to match request's api.\n  if (isString(options)) {\n    const uri = options;\n    options = arguments[2] || {};\n    options.uri = uri;\n  }\n\n  lodashDefaults(options, defaultOptions);\n\n  // TODO figure out how to throw an error if `options.interceptors` does not\n  // contain an instance of HttpStatusInterceptor\n\n  options.logger = options.logger || console;\n\n  return _request(options);\n});\n\nconst defaultOptions = {\n  json: true,\n  interceptors: [\n    HttpStatusInterceptor.create()\n  ]\n};\n\n// const request = protorequest(defaultOptions);\nexport const defaults = protorequest;\nexport const request = protorequest(defaultOptions);\nexport {default as ProgressEvent} from './progress-event';\nexport {default as Interceptor} from './lib/interceptor';\nexport {default as HttpError} from './http-error';\nexport {default as HttpStatusInterceptor} from './interceptors/http-status';\n"]}