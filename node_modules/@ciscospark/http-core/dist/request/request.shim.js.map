{"version":3,"sources":["../../src/request/request.shim.js"],"names":[],"mappings":"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","file":"request.shim.js","sourcesContent":["/**!\n *\n * Copyright (c) 2015 Cisco Systems, Inc. See LICENSE file.\n */\n\n/* eslint-env browser */\n\n// Note: several code paths are ignored in this file. As far as I can tell, any\n// error conditions that would provoke those paths are otherwise prevented and\n// reported.\n\nimport {defaults, pick} from 'lodash';\nimport qs from 'qs';\nimport xhr from 'xhr';\n\n/**\n * @name request\n * @param {Object} options\n * @returns {Promise}\n */\nexport default function _request(options) {\n  return new Promise((resolve) => {\n    const params = pick(options, `method`, `uri`, `withCredentials`, `headers`, `timeout`, `responseType`);\n\n    // Set `response` to `true` to approximate an `HttpResponse` object\n    params.response = true;\n\n    bindProgressEvents(params, options);\n    setAuth(params, options);\n    setCookies(params, options);\n    setDefaults(params, options);\n    setFileType(params, options);\n    setPayload(params, options);\n    setQs(params, options);\n\n    const x = xhr(params, (error, response) => {\n      /* istanbul ignore next */\n      if (error) {\n        options.logger.warn(error);\n      }\n\n      /* istanbul ignore else */\n      if (response) {\n        response.options = options;\n        processResponseJson(response, params);\n        resolve(response);\n      }\n      else {\n        resolve({\n          statusCode: 0,\n          options,\n          headers: options.headers,\n          method: options.method,\n          url: options.uri,\n          body: error\n        });\n      }\n    });\n\n    x.onprogress = options.download.emit.bind(options.download, `progress`);\n  })\n  .catch((error) => {\n    /* istanbul ignore next */\n    return {\n      statusCode: 0,\n      options,\n      headers: options.headers,\n      method: options.method,\n      url: options.uri,\n      body: error\n    };\n  });\n\n  /**\n   * @param {Object} params\n   * @param {Object} options\n   * @private\n   * @returns {undefined}\n   */\n  function bindProgressEvents(params, options) {\n    if (params.method && [`PATCH`, `POST`, `PUT`].includes(params.method.toUpperCase())) {\n      params.xhr = new XMLHttpRequest();\n      params.xhr.upload.onprogress = options.upload.emit.bind(options.upload, `progress`);\n    }\n  }\n\n  /**\n   * @param {Object} params\n   * @param {Object} options\n   * @private\n   * @returns {undefined}\n   */\n  function setAuth(params, options) {\n    if (options.auth) {\n      if (options.auth.bearer) {\n        params.headers.authorization = `Bearer ${options.auth.bearer}`;\n      }\n      else {\n        const user = options.auth.user || options.auth.username;\n        const pass = options.auth.pass || options.auth.password;\n\n        const token = btoa(`${user}:${pass}`);\n        params.headers.authorization = `Basic ${token}`;\n      }\n    }\n  }\n\n  /**\n   * @param {Object} params\n   * @param {Object} options\n   * @private\n   * @returns {undefined}\n   */\n  function setCookies(params, options) {\n    if (options.jar) {\n      params.withCredentials = true;\n    }\n  }\n\n  /**\n   * @param {Object} params\n   * @param {Object} options\n   * @private\n   * @returns {undefined}\n   */\n  function setDefaults(params, options) {\n    const defs = {\n      cors: true,\n      // raynos/xhr defaults withCredentials to true if cors is true, so we need\n      // to make it explicitly false by default\n      withCredentials: false,\n      timeout: 0\n    };\n\n    defaults(params, pick(options, Object.keys(defs)), defs);\n  }\n\n  /**\n   * @param {Object} params\n   * @param {Object} options\n   * @private\n   * @returns {undefined}\n   */\n  function setFileType(params, options) {\n    if (options.responseType === `buffer`) {\n      params.responseType = `arraybuffer`;\n    }\n  }\n\n  /**\n   * @param {Object} params\n   * @param {Object} options\n   * @private\n   * @returns {undefined}\n   */\n  function setQs(params, options) {\n    if (options.qs) {\n      params.uri += `?${qs.stringify(options.qs)}`;\n    }\n  }\n\n  /**\n   * @param {Object} params\n   * @param {Object} options\n   * @private\n   * @returns {undefined}\n   */\n  function setPayload(params, options) {\n    if ((!(`json` in options) || options.json === true) && options.body) {\n      params.json = options.body;\n    }\n    else if (options.form) {\n      params.headers[`Content-Type`] = `application/x-www-form-urlencoded`;\n      params.body = qs.stringify(options.form);\n      Reflect.deleteProperty(params, `json`);\n    }\n    else {\n      params.body = options.body;\n      Reflect.deleteProperty(params, `json`);\n    }\n  }\n\n  /**\n   * @param {Object} response\n   * @param {Object} params\n   * @private\n   * @returns {undefined}\n   */\n  function processResponseJson(response, params) {\n    // If params.json is not defined, xhr won't deserialize the response\n    // so we should give it a shot just in case.\n    if (!params.json && typeof response.body !== `object`) {\n      try {\n        response.body = JSON.parse(response.body);\n      }\n      catch (e) {\n        /* eslint no-empty: [0] */\n      }\n    }\n  }\n}\n"]}