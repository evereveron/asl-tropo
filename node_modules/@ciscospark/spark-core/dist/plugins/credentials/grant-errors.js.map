{"version":3,"sources":["../../../src/plugins/credentials/grant-errors.js"],"names":[],"mappings":";;;;;;;;;;;;;;;;AASA,IAAM,aAAa,2BAAY;AAC7B,WAAS,SAAS,OAAT,CAAiB,GAAjB,EAAsB;AAC7B,oCAAwB,IAAxB,EAA8B;AAC5B,aAAO;AACL,oBAAY,IAAZ;AACA,eAAO,IAAI,IAAJ,CAAS,KAAT;OAFT;AAIA,wBAAkB;AAChB,oBAAY,IAAZ;AACA,eAAO,IAAI,IAAJ,CAAS,iBAAT;OAFT;AAIA,gBAAU;AACR,oBAAY,IAAZ;AACA,eAAO,IAAI,IAAJ,CAAS,SAAT;OAFT;AAIA,WAAK;AACH,oBAAY,KAAZ;AACA,eAAO,GAAP;OAFF;KAbF,EAD6B;;AAoB7B,WAAO,KAAK,gBAAL,CApBsB;GAAtB;AAsBT,2BAvB6B;CAAZ,CAAb;;;;;;;AA0BN,IAAM,sBAAsB,2BAAY,UAAZ,wBAAtB;AACN,IAAM,qBAAqB,2BAAY,UAAZ,uBAArB;AACN,IAAM,oBAAoB,2BAAY,UAAZ,sBAApB;AACN,IAAM,0BAA0B,2BAAY,UAAZ,4BAA1B;AACN,IAAM,0BAA0B,2BAAY,UAAZ,4BAA1B;AACN,IAAM,oBAAoB,2BAAY,UAAZ,sBAApB;;AAEN,IAAM,SAAS;AACb,wBADa;AAEb,0CAFa;AAGb,wCAHa;AAIb,sCAJa;AAKb,kDALa;AAMb,kDANa;AAOb,sCAPa;AAQb,mBAAiB,mBAAjB;AACA,kBAAgB,kBAAhB;AACA,iBAAe,iBAAf;AACA,uBAAqB,uBAArB;AACA,0BAAwB,uBAAxB;AACA,iBAAe,iBAAf;AACA,0BAAO,aAAa;AAClB,WAAO,OAAO,WAAP,KAAuB,UAAvB,CADW;GAdP;CAAT;;kBAmBS","file":"grant-errors.js","sourcesContent":["/**!\n *\n * Copyright (c) 2015 Cisco Systems, Inc. See LICENSE file.\n */\n\n/* eslint camelcase: [0] */\n\nimport extendError from 'extend-error';\n\nconst OAuthError = extendError({\n  parseFn: function parseFn(res) {\n    Object.defineProperties(this, {\n      error: {\n        enumerable: true,\n        value: res.body.error\n      },\n      errorDescription: {\n        enumerable: true,\n        value: res.body.error_description\n      },\n      errorUri: {\n        enumerable: true,\n        value: res.body.error_uri\n      },\n      res: {\n        enumerable: false,\n        value: res\n      }\n    });\n\n    return this.errorDescription;\n  },\n  subTypeName: `OAuthError`\n});\n\nconst InvalidRequestError = extendError(OAuthError, `InvalidRequestError`);\nconst InvalidClientError = extendError(OAuthError, `InvalidClientError`);\nconst InvalidGrantError = extendError(OAuthError, `InvalidGrantError`);\nconst UnauthorizedClientError = extendError(OAuthError, `UnauthorizedClientError`);\nconst UnsupportGrantTypeError = extendError(OAuthError, `UnsupportGrantTypeError`);\nconst InvalidScopeError = extendError(OAuthError, `InvalidScopeError`);\n\nconst errors = {\n  OAuthError,\n  InvalidRequestError,\n  InvalidClientError,\n  InvalidGrantError,\n  UnauthorizedClientError,\n  UnsupportGrantTypeError,\n  InvalidScopeError,\n  invalid_request: InvalidRequestError,\n  invalid_client: InvalidClientError,\n  invalid_grant: InvalidGrantError,\n  unauthorized_client: UnauthorizedClientError,\n  unsupported_grant_type: UnsupportGrantTypeError,\n  invalid_scope: InvalidScopeError,\n  select(errorString) {\n    return errors[errorString] || OAuthError;\n  }\n};\n\nexport default errors;\n"]}