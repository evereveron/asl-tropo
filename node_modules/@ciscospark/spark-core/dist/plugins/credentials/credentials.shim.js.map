{"version":3,"sources":["../../../src/plugins/credentials/credentials.shim.js"],"names":[],"mappings":"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","file":"credentials.shim.js","sourcesContent":["/**!\n *\n * Copyright (c) 2015 Cisco Systems, Inc. See LICENSE file.\n */\n\n/* eslint-env browser */\n\nimport {base64} from '@ciscospark/common';\nimport {oneFlight} from '@ciscospark/common';\nimport {assign,clone,has,noop,omit,pick} from 'lodash';\nimport querystring from 'querystring';\nimport url from 'url';\nimport uuid from 'uuid';\nimport Authorization from './authorization';\nimport CredentialsBase from './credentials-base';\n\nconst Credentials = CredentialsBase.extend({\n  authorize: oneFlight(`authorize`, function authorize(options) {\n    /* eslint complexity: [0] */\n    /* eslint camelcase: [0] */\n\n    this.logger.info(`credentials(shim): authenticating`);\n\n    options = options || {};\n    if (this.isAuthenticated && !options.force) {\n      this.logger.info(`credentials(shim): authentication not expired, not authenticating`);\n      return Promise.resolve();\n    }\n\n    this.set(pick(options, `name`, `orgId`, `password`));\n    if (this.canRefresh || options.code || (this.name && this.orgId && this.password)) {\n      return Reflect.apply(CredentialsBase.prototype.authorize, this, arguments);\n    }\n\n    options.state = options.state || {};\n    options.state.csrf_token = options.state.csrf_token || this._generateSecurityToken();\n\n    this._isAuthenticating = true;\n    switch (this.config.clientType) {\n      case `confidential`:\n        return this.initiateAuthorizationCodeGrant(options);\n      case `public`:\n        return this.initiateImplicitGrant(options);\n      default:\n        return Promise.reject(new Error(`config.credentials.clientType must be defined`));\n    }\n  }),\n\n  initiateImplicitGrant(options) {\n    const vars = {\n      'oauth.client_id': `CLIENT_ID`,\n      'oauth.redirect_uri': `REDIRECT_URI`,\n      'oauth.scope': `SCOPE`\n    };\n\n    for (const key in vars) {\n      if (!has(this.config, key)) {\n        const baseVar = vars[key];\n        return Promise.reject(new Error(`config.credentials.${key} or CISCOSPARK_${baseVar} or COMMON_IDENTITY_${baseVar} or ${baseVar} must be defined`));\n      }\n    }\n\n    this.logger.info(`credentials(shim): initiating implicit grant flow`);\n\n    /* eslint camelcase: [0] */\n    window.location = this._buildOAuthUrl(assign({response_type: `token`}, options));\n\n    // Return an unreasolved promise to suppress console errors.\n    return new Promise(noop);\n  },\n\n  initiateAuthorizationCodeGrant(options) {\n    const vars = {\n      'oauth.client_id': `CLIENT_ID`,\n      'oauth.client_secret': `CLIENT_SECRET`,\n      'oauth.redirect_uri': `REDIRECT_URI`,\n      'oauth.scope': `SCOPE`\n    };\n\n    for (const key in vars) {\n      if (!has(this.config, key)) {\n        const baseVar = vars[key];\n        return Promise.reject(new Error(`config.credentials.${key} or CISCOSPARK_${baseVar} or COMMON_IDENTITY_${baseVar} or ${baseVar} must be defined`));\n      }\n    }\n\n    this.logger.info(`credentials(shim): initiating authorization code grant flow`);\n\n    window.location = this._buildOAuthUrl(assign({response_type: `code`}, options));\n    return new Promise(noop);\n  },\n\n  initialize() {\n    // AmpersandState is a little weird about initialization order. Code that\n    // depends on this.config needs to run after SparkCore#initialize executes,\n    // so, we'll use process.nextTick to run the following block on the next\n    // execution cycle.\n    process.nextTick(() => {\n      const location = url.parse(window.location.href, true);\n\n      let query = clone(location.query);\n\n      if (query.code) {\n        Reflect.deleteProperty(location.query, `code`);\n        Reflect.deleteProperty(location.query, `state`);\n\n        this._updateLocation(location);\n\n        // Though initialize is a synchronous call, it should be safe to\n        // call authenticate() because it'll get called again later but end\n        // up cached via oneFlight.\n        // Call spark.authenticate to make sure we trigger a device refresh.\n        return this.spark.authenticate(query);\n      }\n\n      if (query.access_token) {\n        location.query = this._extractTokenInfo(query);\n        this._updateLocation(location);\n        return Promise.resolve(noop);\n      }\n\n      let hash = location.hash || ``;\n      if (hash.includes(`#`)) {\n        hash = hash.substr(1);\n      }\n\n      query = querystring.parse(hash);\n      if (query.access_token) {\n        location.hash = this._extractTokenInfo(query);\n        this._updateLocation(location);\n      }\n    });\n  },\n\n  logout() {\n    this.logger.info(`credentials(shim): logging out`);\n\n    return Reflect.apply(CredentialsBase.prototype.logout, this, arguments)\n      .then(() => {\n        window.location = this._buildLogoutUrl();\n      });\n  },\n\n  _extractTokenInfo(query) {\n    const tokenKeys = [\n      `access_token`,\n      `expires_in`,\n      `token_type`,\n      `refresh_token`,\n      `refresh_token_expires_in`\n    ];\n\n    query.state = querystring.parse(base64.fromBase64url(query.state));\n\n    this._verifySecurityToken(query.state.csrf_token);\n\n    const token = pick(query, tokenKeys);\n    token.expires_in = parseInt(token.expires_in);\n    token.refresh_token_expires_in = parseInt(token.refresh_token_expires_in);\n    const auth = new Authorization(token);\n    this._pushAuthorization(auth);\n\n    query = omit(query, tokenKeys);\n    query.state = omit(query.state, `csrf_token`);\n    if (Object.keys(query.state).length === 0) {\n      Reflect.deleteProperty(query, `state`);\n    }\n    else {\n      query.state = base64.toBase64Url(querystring.stringify(query.state));\n    }\n\n    return query;\n  },\n\n  _generateSecurityToken() {\n    this.logger.info(`credentials(shim): generating csrf token`);\n\n    const token = uuid.v4();\n    sessionStorage.setItem(`oauth2-csrf-token`, token);\n    return token;\n  },\n\n  _verifySecurityToken(token) {\n    this.logger.info(`credentials(shim): verifying csrf token`);\n\n    const _token = sessionStorage.getItem(`oauth2-csrf-token`);\n    sessionStorage.removeItem(`oauth2-csrf-token`);\n\n    if (token !== _token) {\n      throw new Error(`CSRF token ${token} does not match stored token ${_token}`);\n    }\n  },\n\n  _updateLocation(location) {\n    if (typeof location !== `string`) {\n      if (location.query) {\n        Reflect.deleteProperty(location, `search`);\n      }\n      if (typeof location.hash !== `string`) {\n        location.hash = querystring.stringify(location.hash);\n      }\n      location = url.format(location);\n    }\n\n    this.logger.info(`credentials(shim): updating browser location`, location);\n    // It's pretty unlikely the SDK will be used in a browser that doesn't\n    // support the history API, so we'll just ignore the cases where it's not\n    // available.\n    if (window.history && window.history.replaceState) {\n      window.history.replaceState({}, null, location);\n    }\n  }\n});\n\nexport default Credentials;\n"]}