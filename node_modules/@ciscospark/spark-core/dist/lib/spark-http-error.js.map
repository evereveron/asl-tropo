{"version":3,"sources":["../../src/lib/spark-http-error.js"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;AAQA,IAAM,iBAAiB,gDAAuB;AAC5C,4BAAQ,KAAc;;;sCAAN;;KAAM;;AACpB,QAAI,UAAU,6CAAU,SAAV,CAAoB,OAApB,EAA4B,IAA5B,+BAAiC,MAAM,YAAQ,KAA/C,CAAV,CADgB;;AAGpB,kCAAuB,IAAvB,aAAwC;AACtC,kBAAY,KAAZ;AACA,aAAO,IAAI,OAAJ;KAFT,EAHoB;;AAQpB,yCAAmC,KAAK,OAAL,CAAa,OAAb,CAAqB,UAArB,CARf;;AAUpB,WAAO,OAAP,CAVoB;GADsB;;AAa5C,+BAb4C;CAAvB,CAAjB;;AAgBN,oBAAU,YAAV,CAAuB,cAAvB;;kBAEe","file":"spark-http-error.js","sourcesContent":["/**!\n *\n * Copyright (c) 2015 Cisco Systems, Inc. See LICENSE file.\n */\n\nimport extendError from 'extend-error';\nimport {HttpError} from '@ciscospark/http-core';\n\nconst SparkHttpError = extendError(HttpError, {\n  parseFn(res, ...rest) {\n    let message = HttpError.prototype.parseFn.call(this, res, ...rest);\n\n    Reflect.defineProperty(this, `options`, {\n      enumerable: false,\n      value: res.options\n    });\n\n    message += `\\nWEBEX_TRACKING_ID: ${this.options.headers.trackingid}`;\n\n    return message;\n  },\n  subTypeName: `SparkHttpError`\n});\n\nHttpError.makeSubTypes(SparkHttpError);\n\nexport default SparkHttpError;\n"]}