'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _ampersandState = require('ampersand-state');

var _ampersandState2 = _interopRequireDefault(_ampersandState);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var SparkPlugin = _ampersandState2.default.extend({
  derived: {
    config: {
      deps: ['spark', 'spark.config'],
      fn: function fn() {
        if (this.spark && this.spark.config) {
          var namespace = this.getNamespace();
          if (namespace) {
            return this.spark.config[namespace.toLowerCase()];
          }

          return this.spark.config;
        }
      }
    },

    logger: {
      deps: ['spark', 'spark.logger'],
      fn: function fn() {
        return this.spark.logger || console;
      }
    },

    spark: {
      deps: ['parent'],
      fn: function fn() {
        if (!this.parent && !this.collection) {
          throw new Error('Cannot determine `this.spark` without `this.parent` or `this.collection`. Please initialize `this` via `children` or `collection` or set `this.parent` manually');
        }

        /* jscs:disable */
        var parent = this;
        /* jscs:enable */
        while (parent.parent || parent.collection) {
          parent = parent.parent || parent.collection;
        }

        return parent;
      }
    }
  },

  session: {
    parent: {
      type: 'any'
    }
  },

  request: function request() {
    var _spark;

    return (_spark = this.spark).request.apply(_spark, arguments);
  },
  upload: function upload() {
    var _spark2;

    return (_spark2 = this.spark).upload.apply(_spark2, arguments);
  }
}); /**!
     *
     * Copyright (c) 2015 Cisco Systems, Inc. See LICENSE file.
     */

exports.default = SparkPlugin;
//# sourceMappingURL=spark-plugin.js.map
