'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _get = require('lodash/get');

var _get2 = _interopRequireDefault(_get);

var _promise = require('babel-runtime/core-js/promise');

var _promise2 = _interopRequireDefault(_promise);

var _stringify = require('babel-runtime/core-js/json/stringify');

var _stringify2 = _interopRequireDefault(_stringify);

var _getPrototypeOf = require('babel-runtime/core-js/object/get-prototype-of');

var _getPrototypeOf2 = _interopRequireDefault(_getPrototypeOf);

var _classCallCheck2 = require('babel-runtime/helpers/classCallCheck');

var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

var _createClass2 = require('babel-runtime/helpers/createClass');

var _createClass3 = _interopRequireDefault(_createClass2);

var _possibleConstructorReturn2 = require('babel-runtime/helpers/possibleConstructorReturn');

var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

var _inherits2 = require('babel-runtime/helpers/inherits');

var _inherits3 = _interopRequireDefault(_inherits2);

var _httpCore = require('@ciscospark/http-core');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/**!
 *
 * Copyright (c) 2015 Cisco Systems, Inc. See LICENSE file.
 */

/* eslint no-console:[0] */

var ResponseLoggerInterceptor = function (_Interceptor) {
  (0, _inherits3.default)(ResponseLoggerInterceptor, _Interceptor);

  function ResponseLoggerInterceptor() {
    (0, _classCallCheck3.default)(this, ResponseLoggerInterceptor);
    return (0, _possibleConstructorReturn3.default)(this, (0, _getPrototypeOf2.default)(ResponseLoggerInterceptor).apply(this, arguments));
  }

  (0, _createClass3.default)(ResponseLoggerInterceptor, [{
    key: 'onResponse',
    value: function onResponse(options, response) {
      var now = new Date();
      this.printResponseHeader(options, response);

      if (process.env.ENABLE_VERBOSE_NETWORK_LOGGING) {
        console.log('timestamp (end): ', now.getTime(), now.toISOString());

        if (typeof response.body === 'string' || Buffer.isBuffer(response.body)) {
          console.log('Response: ', 'Not printed, it`s probably a file');
        } else if (typeof response.body === 'object') {
          try {
            console.log('Response: ', (0, _stringify2.default)(response.body, null, 2));
          } catch (err) {
            console.log('Response: ', '[Not Serializable]', err);
          }
        }
      }
      console.log('\\**********************************************************************/');

      return response;
    }
  }, {
    key: 'onResponseError',
    value: function onResponseError(options, reason) {
      var now = new Date();
      this.printResponseHeader(options, reason);

      if (process.env.ENABLE_VERBOSE_NETWORK_LOGGING) {
        console.log('timestamp (end): ', now.getTime(), now.toISOString());
        try {
          console.error('Response: ', (0, _stringify2.default)(reason.body, null, 2));
        } catch (err) {
          console.error('Response: ', reason.body);
        }
      }
      console.log('\\**********************************************************************/');

      return _promise2.default.reject(reason);
    }
  }, {
    key: 'printResponseHeader',
    value: function printResponseHeader(options, response) {
      console.log('Status Code:', response.statusCode);
      console.log('WEBEX_TRACKINGID:', (0, _get2.default)(options, 'headers.trackingid') || (0, _get2.default)(response, 'headers.trackingid'));
      console.log('Network duration:', options.$timings.networkEnd - options.$timings.networkStart);
      console.log('Processing duration:', options.$timings.requestEnd - options.$timings.requestStart);
    }
  }], [{
    key: 'create',
    value: function create() {
      return new ResponseLoggerInterceptor();
    }
  }]);
  return ResponseLoggerInterceptor;
}(_httpCore.Interceptor);

exports.default = ResponseLoggerInterceptor;
//# sourceMappingURL=response-logger.js.map
