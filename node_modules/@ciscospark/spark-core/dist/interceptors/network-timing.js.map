{"version":3,"sources":["../../src/interceptors/network-timing.js"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;IAOqB;;;;;;;;;;8BAKT,SAAS;AACjB,cAAQ,QAAR,GAAmB,QAAQ,QAAR,IAAoB,EAApB,CADF;AAEjB,cAAQ,QAAR,CAAiB,YAAjB,GAAgC,KAAK,GAAL,EAAhC,CAFiB;AAGjB,aAAO,OAAP,CAHiB;;;;+BAMR,SAAS,UAAU;AAC5B,cAAQ,QAAR,CAAiB,UAAjB,GAA8B,KAAK,GAAL,EAA9B,CAD4B;AAE5B,aAAO,QAAP,CAF4B;;;;oCAKd,SAAS,QAAQ;AAC/B,cAAQ,QAAR,CAAiB,UAAjB,GAA8B,KAAK,GAAL,EAA9B,CAD+B;AAE/B,aAAO,kBAAQ,MAAR,CAAe,MAAf,CAAP,CAF+B;;;;2BAfnB,SAAS;AACrB,aAAO,IAAI,wBAAJ,CAA6B,OAA7B,CAAP,CADqB;;;SADJ","file":"network-timing.js","sourcesContent":["/**!\n *\n * Copyright (c) 2015 Cisco Systems, Inc. See LICENSE file.\n */\n\nimport {Interceptor} from '@ciscospark/http-core';\n\nexport default class NetworkTimingInterceptor extends Interceptor {\n  static create(options) {\n    return new NetworkTimingInterceptor(options);\n  }\n\n  onRequest(options) {\n    options.$timings = options.$timings || {};\n    options.$timings.networkStart = Date.now();\n    return options;\n  }\n\n  onResponse(options, response) {\n    options.$timings.networkEnd = Date.now();\n    return response;\n  }\n\n  onResponseError(options, reason) {\n    options.$timings.networkEnd = Date.now();\n    return Promise.reject(reason);\n  }\n}\n"]}