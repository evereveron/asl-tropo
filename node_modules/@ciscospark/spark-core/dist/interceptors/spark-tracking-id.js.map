{"version":3,"sources":["../../src/interceptors/spark-tracking-id.js"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;IAQqB;;;AACnB,WADmB,0BACnB,CAAY,OAAZ,EAAqB;wCADF,4BACE;;6FADF;;AACE;;AAInB,QAAI,CAAC,OAAD,IAAY,CAAC,QAAQ,MAAR,EAAgB;AAC/B,YAAM,IAAI,KAAJ,0FAAN,CAD+B;KAAjC;;AAIA,QAAI,WAAW,CAAX,CARe;AASnB,QAAM,OAAO,QAAQ,IAAR,IAAgB,eAAK,EAAL,EAAhB,CATM;AAUnB,QAAM,SAAS,QAAQ,MAAR,kBAAT,CAVa;;AAYnB,2CAA8B;AAC5B,YAAM;AACJ,kBAAU,KAAV;AACA,eAAO,IAAP;OAFF;AAIA,cAAQ;AACN,kBAAU,KAAV;AACA,eAAO,MAAP;OAFF;AAIA,gBAAU;AACR,aAAK,SAAS,GAAT,GAAe;AAClB,iBAAO,UAAP,CADkB;SAAf;OADP;KATF,EAZmB;;GAArB;;6BADmB;;8BAkCT,SAAS;AACjB,UAAI,KAAK,kBAAL,CAAwB,OAAxB,CAAJ,EAAsC;AACpC,gBAAQ,OAAR,CAAgB,UAAhB,GAA6B,KAAK,mBAAL,CAAyB,OAAzB,CAA7B,CADoC;OAAtC;AAGA,aAAO,OAAP,CAJiB;;;;uCAOA,SAAS;AAC1B,aAAO,CAAC,QAAQ,OAAR,CAAgB,UAAhB,CADkB;;;;0CAIN;AACpB,aAAU,KAAK,MAAL,SAAe,KAAK,IAAL,SAAa,KAAK,QAAL,CADlB;;;;2BAfR,SAAS;AACrB,aAAO,IAAI,0BAAJ,CAA+B,OAA/B,CAAP,CADqB;;;SA9BJ","file":"spark-tracking-id.js","sourcesContent":["/**!\n *\n * Copyright (c) 2015 Cisco Systems, Inc. See LICENSE file.\n */\n\nimport {Interceptor} from '@ciscospark/http-core';\nimport uuid from 'uuid';\n\nexport default class SparkTrackingIdInterceptor extends Interceptor {\n  constructor(options) {\n    // TODO set tracking id\n    super();\n\n    if (!options || !options.prefix) {\n      throw new Error(`\\`options.prefix\\` is required. Did you forget to specify it at config.trackindIdPrefix?`);\n    }\n\n    let sequence = 0;\n    const base = options.base || uuid.v4();\n    const prefix = options.prefix || `spark-js-sdk`;\n\n    Object.defineProperties(this, {\n      base: {\n        writable: false,\n        value: base\n      },\n      prefix: {\n        writable: false,\n        value: prefix\n      },\n      sequence: {\n        get: function get() {\n          return sequence++;\n        }\n      }\n    });\n  }\n\n  static create(options) {\n    return new SparkTrackingIdInterceptor(options);\n  }\n\n  onRequest(options) {\n    if (this.requiresTrackingId(options)) {\n      options.headers.trackingid = this._generateTrackingId(options);\n    }\n    return options;\n  }\n\n  requiresTrackingId(options) {\n    return !options.headers.trackingid;\n  }\n\n  _generateTrackingId() {\n    return `${this.prefix}_${this.base}_${this.sequence}`;\n  }\n}\n"]}