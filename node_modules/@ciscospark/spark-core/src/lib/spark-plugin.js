/**!
 *
 * Copyright (c) 2015 Cisco Systems, Inc. See LICENSE file.
 */

import AmpState from 'ampersand-state';

const SparkPlugin = AmpState.extend({
  derived: {
    config: {
      deps: [
        `spark`,
        `spark.config`
      ],
      fn() {
        if (this.spark && this.spark.config) {
          const namespace = this.getNamespace();
          if (namespace) {
            return this.spark.config[namespace.toLowerCase()];
          }

          return this.spark.config;
        }
      }
    },

    logger: {
      deps: [
        `spark`,
        `spark.logger`
      ],
      fn() {
        return this.spark.logger || console;
      }
    },

    spark: {
      deps: [`parent`],
      fn() {
        if (!this.parent && !this.collection) {
          throw new Error(`Cannot determine \`this.spark\` without \`this.parent\` or \`this.collection\`. Please initialize \`this\` via \`children\` or \`collection\` or set \`this.parent\` manually`);
        }

        /* jscs:disable */
        let parent = this;
        /* jscs:enable */
        while (parent.parent || parent.collection) {
          parent = parent.parent || parent.collection;
        }

        return parent;
      }
    }
  },

  session: {
    parent: {
      type: `any`
    }
  },

  request(...args) {
    return this.spark.request(...args);
  },

  upload(...args) {
    return this.spark.upload(...args);
  }
});

export default SparkPlugin;
