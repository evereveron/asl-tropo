"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _iterator = require("babel-runtime/core-js/symbol/iterator");

var _iterator2 = _interopRequireDefault(_iterator);

var _defineProperties = require("babel-runtime/core-js/object/define-properties");

var _defineProperties2 = _interopRequireDefault(_defineProperties);

var _classCallCheck2 = require("babel-runtime/helpers/classCallCheck");

var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

var _createClass2 = require("babel-runtime/helpers/createClass");

var _createClass3 = _interopRequireDefault(_createClass2);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/**!
 *
 * Copyright (c) 2015 Cisco Systems, Inc. See LICENSE file.
 * @private
 */

var Page = function () {
  function Page(res, spark) {
    (0, _classCallCheck3.default)(this, Page);

    var items = res.body.items;

    (0, _defineProperties2.default)(this, {
      items: {
        enumerable: true,
        value: items
      },
      length: {
        get: function get() {
          return this.items.length;
        }
      },
      links: {
        value: Page.parseLinkHeaders(res.headers.link)
      },
      spark: {
        value: spark
      }
    });
  }

  (0, _createClass3.default)(Page, [{
    key: "next",
    value: function next() {
      return this.getLink("next");
    }
  }, {
    key: "hasNext",
    value: function hasNext() {
      return this.hasLink("next");
    }
  }, {
    key: "previous",
    value: function previous() {
      return this.getLink("previous");
    }
  }, {
    key: "hasPrevious",
    value: function hasPrevious() {
      return this.hasLink("previous");
    }
  }, {
    key: "getLink",
    value: function getLink(link) {
      var _this = this;

      return this.spark.request({
        uri: this.links[link]
      }).then(function (res) {
        return new Page(res, _this.spark);
      });
    }
  }, {
    key: "hasLink",
    value: function hasLink(link) {
      return Boolean(this.links[link]);
    }
  }, {
    key: _iterator2.default,
    value: function value() {
      var _this2 = this;

      var i = -1;
      return {
        next: function next() {
          i++;
          if (i < _this2.length) {
            return {
              value: _this2.items[i]
            };
          }

          return { done: true };
        }
      };
    }
  }], [{
    key: "parseLinkHeaders",
    value: function parseLinkHeaders(linkHeader) {
      if (!linkHeader) {
        return {};
      }

      linkHeader = Array.isArray(linkHeader) || [linkHeader];
      return linkHeader.reduce(function (links, linkHeader) {
        linkHeader = linkHeader.split(";");
        var link = linkHeader[0].replace("<", "").replace(">", "");
        var rel = linkHeader[1].split("=")[1].replace(/"/g, "");
        links[rel] = link;
        return links;
      }, {});
    }
  }]);
  return Page;
}();

exports.default = Page;
//# sourceMappingURL=page.js.map
