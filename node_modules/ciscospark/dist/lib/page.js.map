{"version":3,"sources":["../../src/lib/page.js"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;IAMqB;AACnB,WADmB,IACnB,CAAY,GAAZ,EAAiB,KAAjB,EAAwB;wCADL,MACK;;AACtB,QAAM,QAAQ,IAAI,IAAJ,CAAS,KAAT,CADQ;;AAGtB,oCAAwB,IAAxB,EAA8B;AAC5B,aAAO;AACL,oBAAY,IAAZ;AACA,eAAO,KAAP;OAFF;AAIA,cAAQ;AACN,4BAAM;AACJ,iBAAO,KAAK,KAAL,CAAW,MAAX,CADH;SADA;OAAR;AAKA,aAAO;AACL,eAAO,KAAK,gBAAL,CAAsB,IAAI,OAAJ,CAAY,IAAZ,CAA7B;OADF;AAGA,aAAO;AACL,eAAO,KAAP;OADF;KAbF,EAHsB;GAAxB;;6BADmB;;2BAsCZ;AACL,aAAO,KAAK,OAAL,QAAP,CADK;;;;8BAIG;AACR,aAAO,KAAK,OAAL,QAAP,CADQ;;;;+BAIC;AACT,aAAO,KAAK,OAAL,YAAP,CADS;;;;kCAIG;AACZ,aAAO,KAAK,OAAL,YAAP,CADY;;;;4BAIN,MAAM;;;AACZ,aAAO,KAAK,KAAL,CAAW,OAAX,CAAmB;AACxB,aAAK,KAAK,KAAL,CAAW,IAAX,CAAL;OADK,EAGJ,IAHI,CAGC,UAAC,GAAD,EAAS;AACb,eAAO,IAAI,IAAJ,CAAS,GAAT,EAAc,MAAK,KAAL,CAArB,CADa;OAAT,CAHR,CADY;;;;4BASN,MAAM;AACZ,aAAO,QAAQ,KAAK,KAAL,CAAW,IAAX,CAAR,CAAP,CADY;;;;4BAIM;;;AAClB,UAAI,IAAI,CAAC,CAAD,CADU;AAElB,aAAO;AACL,cAAM,gBAAM;AACV,cADU;AAEV,cAAI,IAAI,OAAK,MAAL,EAAa;AACnB,mBAAO;AACL,qBAAO,OAAK,KAAL,CAAW,CAAX,CAAP;aADF,CADmB;WAArB;;AAMA,iBAAO,EAAC,MAAM,IAAN,EAAR,CARU;SAAN;OADR,CAFkB;;;;qCA5CI,YAAY;AAClC,UAAI,CAAC,UAAD,EAAa;AACf,eAAO,EAAP,CADe;OAAjB;;AAIA,mBAAa,MAAM,OAAN,CAAc,UAAd,KAA6B,CAAC,UAAD,CAA7B,CALqB;AAMlC,aAAO,WAAW,MAAX,CAAkB,UAAC,KAAD,EAAQ,UAAR,EAAuB;AAC9C,qBAAa,WAAW,KAAX,KAAb,CAD8C;AAE9C,YAAM,OAAO,WAAW,CAAX,EAAc,OAAd,UAA+B,OAA/B,SAAP,CAFwC;AAG9C,YAAM,MAAM,WAAW,CAAX,EAAc,KAAd,MAAyB,CAAzB,EAA4B,OAA5B,CAAoC,IAApC,KAAN,CAHwC;AAI9C,cAAM,GAAN,IAAa,IAAb,CAJ8C;AAK9C,eAAO,KAAP,CAL8C;OAAvB,EAMtB,EANI,CAAP,CANkC;;;SAvBjB","file":"page.js","sourcesContent":["/**!\n *\n * Copyright (c) 2015 Cisco Systems, Inc. See LICENSE file.\n * @private\n */\n\nexport default class Page {\n  constructor(res, spark) {\n    const items = res.body.items;\n\n    Object.defineProperties(this, {\n      items: {\n        enumerable: true,\n        value: items\n      },\n      length: {\n        get() {\n          return this.items.length;\n        }\n      },\n      links: {\n        value: Page.parseLinkHeaders(res.headers.link)\n      },\n      spark: {\n        value: spark\n      }\n    });\n  }\n\n  static parseLinkHeaders(linkHeader) {\n    if (!linkHeader) {\n      return {};\n    }\n\n    linkHeader = Array.isArray(linkHeader) || [linkHeader];\n    return linkHeader.reduce((links, linkHeader) => {\n      linkHeader = linkHeader.split(`;`);\n      const link = linkHeader[0].replace(`<`, ``).replace(`>`, ``);\n      const rel = linkHeader[1].split(`=`)[1].replace(/\"/g, ``);\n      links[rel] = link;\n      return links;\n    }, {});\n  }\n\n  next() {\n    return this.getLink(`next`);\n  }\n\n  hasNext() {\n    return this.hasLink(`next`);\n  }\n\n  previous() {\n    return this.getLink(`previous`);\n  }\n\n  hasPrevious() {\n    return this.hasLink(`previous`);\n  }\n\n  getLink(link) {\n    return this.spark.request({\n      uri: this.links[link]\n    })\n      .then((res) => {\n        return new Page(res, this.spark);\n      });\n  }\n\n  hasLink(link) {\n    return Boolean(this.links[link]);\n  }\n\n  [Symbol.iterator]() {\n    let i = -1;\n    return {\n      next: () => {\n        i++;\n        if (i < this.length) {\n          return {\n            value: this.items[i]\n          };\n        }\n\n        return {done: true};\n      }\n    };\n  }\n}\n"]}