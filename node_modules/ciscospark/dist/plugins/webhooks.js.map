{"version":3,"sources":["../../src/plugins/webhooks.js"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAyBA,IAAM,WAAW,uBAAY,MAAZ;;AAEf;;;;;;;;;;;AAUA,0BAAO,SAAS;AACd,WAAO,KAAK,OAAL,CAAa;AAClB,oBADkB;AAElB,WAAQ,KAAK,MAAL,CAAY,eAAZ,cAAR;AACA,YAAM,OAAN;KAHK,EAKJ,IALI,CAKC,UAAC,GAAD;aAAS,IAAI,IAAJ;KAAT,CALR,CADc;GAVhB;;;;;;;;;;;;AA4BA,oBAAI,SAAS;AACX,QAAM,KAAK,QAAQ,EAAR,IAAc,OAAd,CADA;;AAGX,WAAO,KAAK,OAAL,CAAa;AAClB,WAAQ,KAAK,MAAL,CAAY,eAAZ,kBAAwC,EAAhD;KADK,EAGJ,IAHI,CAGC,UAAC,GAAD;aAAS,IAAI,IAAJ,CAAS,KAAT,IAAkB,IAAI,IAAJ;KAA3B,CAHR,CAHW;GA5Bb;;;;;;;;;;;;;AA+CA,sBAAK,SAAS;;;AACZ,WAAO,KAAK,OAAL,CAAa;AAClB,WAAQ,KAAK,MAAL,CAAY,eAAZ,eAAR;AACA,UAAI,OAAJ;KAFK,EAIJ,IAJI,CAIC,UAAC,GAAD;aAAS,mBAAS,GAAT,EAAc,MAAK,KAAL;KAAvB,CAJR,CADY;GA/Cd;;;;;;;;;;;;AAgEA,0BAAO,SAAS;AACd,QAAM,KAAK,QAAQ,EAAR,IAAc,OAAd,CADG;AAEd,WAAO,KAAK,OAAL,CAAa;AAClB,sBADkB;AAElB,WAAQ,KAAK,MAAL,CAAY,eAAZ,kBAAwC,EAAhD;KAFK,EAIJ,IAJI,CAIC,UAAC,GAAD,EAAS;;;AAGb,UAAI,IAAI,UAAJ,KAAmB,GAAnB,EAAwB;AAC1B,eAAO,SAAP,CAD0B;OAA5B;AAGA,aAAO,IAAI,IAAJ,CANM;KAAT,CAJR,CAFc;GAhEhB;;;;;;;;;;;;AAyFA,0BAAO,SAAS;AACd,QAAM,KAAK,QAAQ,EAAR,CADG;AAEd,WAAO,KAAK,OAAL,CAAa;AAClB,mBADkB;AAElB,WAAQ,KAAK,MAAL,CAAY,eAAZ,kBAAwC,EAAhD;AACA,YAAM,OAAN;KAHK,EAKJ,IALI,CAKC,UAAC,GAAD;aAAS,IAAI,IAAJ;KAAT,CALR,CAFc;GAzFhB;CAFe,CAAX;;kBAsGS","file":"webhooks.js","sourcesContent":["/**!\n *\n * Copyright (c) 2015 Cisco Systems, Inc. See LICENSE file.\n * @private\n */\n\nimport {SparkPlugin} from '@ciscospark/spark-core';\nimport Page from '../lib/page';\n\n/**\n * @typedef {Object} Types~Webhook\n * @property {string} id - The unique ID for the webhook.\n * @property {string} resource - The resource type for the webhook.\n * @property {string} event - The event type for the webhook.\n * @property {string} filter - The filter that defines the webhook scope.\n * @property {string} targetUrl - The URL that receives POST requests for each event.\n * @property {string} name - A user-friendly name for this webhook.\n */\n\n/**\n * A webhook notifies an application when an event for which the application is\n * registered has occurred.\n * @class\n * @extends SparkPlugin\n */\nconst Webhooks = SparkPlugin.extend(\n  /** @lends Webhooks.prototype */\n  {\n  /**\n   * Posts a webhook.\n   * @param {Types~Webhook} webhook\n   * @returns {Promise<Webhook>}\n   * @example\n   * <%= webhooks__create_es6 %>\n   * @example\n   * <%= webhooks__create %>\n   */\n  create(webhook) {\n    return this.request({\n      method: `POST`,\n      uri: `${this.config.hydraServiceUrl}/webhooks`,\n      body: webhook\n    })\n      .then((res) => res.body);\n  },\n\n  /**\n   * Shows details for a webhook.\n   * @param {Webhook|string} webhook\n   * @returns {Promise<Array<Webhook>>}\n   * @example\n   * <%= webhooks__get_es6 %>\n   * @example\n   * <%= webhooks__get %>\n   */\n  get(webhook) {\n    const id = webhook.id || webhook;\n\n    return this.request({\n      uri: `${this.config.hydraServiceUrl}/webhooks/${id}`\n    })\n      .then((res) => res.body.items || res.body);\n  },\n\n  /**\n   * Lists all webhooks.\n   * @param {Object} options\n   * @param {integer} options.max Limit the maximum number of webhooks in the response.\n   * @returns {Promise<Webhook>}\n   * @example\n   * <%= webhooks__list_es6 %>\n   * @example\n   * <%= webhooks__list %>\n   */\n  list(options) {\n    return this.request({\n      uri: `${this.config.hydraServiceUrl}/webhooks/`,\n      qs: options\n    })\n      .then((res) => new Page(res, this.spark));\n  },\n\n  /**\n   * Delete a webhook.\n   * @param {Webhook|string} webhook\n   * @returns {Promise}\n   * @example\n   * <%= webhooks__remove_es6 %>\n   * @example\n   * <%= webhooks__remove %>\n   */\n  remove(webhook) {\n    const id = webhook.id || webhook;\n    return this.request({\n      method: `DELETE`,\n      uri: `${this.config.hydraServiceUrl}/webhooks/${id}`\n    })\n      .then((res) => {\n        // Firefox has some issues with 204s and/or DELETE. This should move to\n        // http-core\n        if (res.statusCode === 204) {\n          return undefined;\n        }\n        return res.body;\n      });\n  },\n\n  /**\n   * Update a webhook.\n   * @param {Webhook} webhook\n   * @returns {Promise<Webhook>}\n   * @example\n   * <%= webhooks__update_es6 %>\n   * @example\n   * <%= webhooks__update %>\n   */\n  update(webhook) {\n    const id = webhook.id;\n    return this.request({\n      method: `PUT`,\n      uri: `${this.config.hydraServiceUrl}/webhooks/${id}`,\n      body: webhook\n    })\n      .then((res) => res.body);\n  }\n});\n\nexport default Webhooks;\n"]}