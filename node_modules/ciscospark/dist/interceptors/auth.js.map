{"version":3,"sources":["../../src/interceptors/auth.js"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;IAaqB;;;AACnB,WADmB,yBACnB,CAAY,KAAZ,EAAmB;wCADA,2BACA;wFADA,sCAEX,QADW;GAAnB;;6BADmB;;wCASC,SAAS;AAC3B,UAAI,QAAQ,GAAR,CAAY,QAAZ,CAAqB,KAAK,KAAL,CAAW,MAAX,CAAkB,eAAlB,CAAzB,EAA6D;AAC3D,eAAO,IAAP,CAD2D;OAA7D;;AAIA,aAAO,KAAP,CAL2B;;;;gDAQD;AAC1B,aAAO,KAAP,CAD0B;;;;wCAIR,QAAQ,SAAS;AACnC,UAAI,WAAW,QAAQ,wBAAR,KAAqC,KAArC,EAA4C;AACzD,eAAO,KAAP,CADyD;OAA3D;;AAIA,UAAI,OAAO,UAAP,KAAsB,GAAtB,EAA2B;AAC7B,eAAO,IAAP,CAD6B;OAA/B;;AAIA,aAAO,KAAP,CATmC;;;;6BAhBrB;AACd,aAAO,IAAI,yBAAJ,CAA8B,IAA9B,CAAP,CADc;;;SALG","file":"auth.js","sourcesContent":["/**!\n *\n * Copyright (c) 2015 Cisco Systems, Inc. See LICENSE file.\n * @private\n */\n\nimport {AuthInterceptor} from '@ciscospark/spark-core';\n\n/**\n * @class\n * @extends AuthInterceptor\n * @private\n */\nexport default class CiscoSparkAuthInterceptor extends AuthInterceptor {\n  constructor(spark) {\n    super(spark);\n  }\n\n  static create() {\n    return new CiscoSparkAuthInterceptor(this);\n  }\n\n  requiresCredentials(options) {\n    if (options.uri.includes(this.spark.config.hydraServiceUrl)) {\n      return true;\n    }\n\n    return false;\n  }\n\n  requiresClientCredentials() {\n    return false;\n  }\n\n  shouldAttemptReauth(reason, options) {\n    if (options && options.shouldRefreshAccessToken === false) {\n      return false;\n    }\n\n    if (reason.statusCode === 401) {\n      return true;\n    }\n\n    return false;\n  }\n}\n"]}